import {
  adapters
} from "./chunk-BB7SUU7S.js";
import {
  moment_default
} from "./chunk-RPFJALRZ.js";
import {
  init_define_process_env
} from "./chunk-AJ57YXW2.js";

// dep:chartjs-adapter-moment
init_define_process_env();

// node_modules/chartjs-adapter-moment/dist/chartjs-adapter-moment.esm.js
init_define_process_env();
var FORMATS = {
  datetime: "MMM D, YYYY, h:mm:ss a",
  millisecond: "h:mm:ss.SSS a",
  second: "h:mm:ss a",
  minute: "h:mm a",
  hour: "hA",
  day: "MMM D",
  week: "ll",
  month: "MMM YYYY",
  quarter: "[Q]Q - YYYY",
  year: "YYYY"
};
adapters._date.override(typeof moment_default === "function" ? {
  _id: "moment",
  formats: function() {
    return FORMATS;
  },
  parse: function(value, format) {
    if (typeof value === "string" && typeof format === "string") {
      value = moment_default(value, format);
    } else if (!(value instanceof moment_default)) {
      value = moment_default(value);
    }
    return value.isValid() ? value.valueOf() : null;
  },
  format: function(time, format) {
    return moment_default(time).format(format);
  },
  add: function(time, amount, unit) {
    return moment_default(time).add(amount, unit).valueOf();
  },
  diff: function(max, min, unit) {
    return moment_default(max).diff(moment_default(min), unit);
  },
  startOf: function(time, unit, weekday) {
    time = moment_default(time);
    if (unit === "isoWeek") {
      weekday = Math.trunc(Math.min(Math.max(0, weekday), 6));
      return time.isoWeekday(weekday).startOf("day").valueOf();
    }
    return time.startOf(unit).valueOf();
  },
  endOf: function(time, unit) {
    return moment_default(time).endOf(unit).valueOf();
  }
} : {});
/*!
  * chartjs-adapter-moment v1.0.0
  * https://www.chartjs.org
  * (c) 2021 chartjs-adapter-moment Contributors
  * Released under the MIT license
  */
//# sourceMappingURL=chartjs-adapter-moment.js.map
